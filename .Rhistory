shiny::runApp('Dropbox/corplot/shinycorplots-master-b122d52470b8c848139a1ae7e5c932b7f82afff3')
install.packages("tidyverse")
library(tidyverse)
library(MASS)
tidyverse_conflicts()
tidyverse_update()
install.packages(c("dplyr", "modelr", "stringr", "tidyr"))
library(tidyverse)
library(MASS)
tidyverse_conflicts()
tidyverse_update()
install.packages(c("dplyr", "stringr", "tidyr"))
install.packages(c("dplyr", "stringr", "tidyr"))
shiny::runApp('Dropbox/corplot/shinycorplots-master-b122d52470b8c848139a1ae7e5c932b7f82afff3')
install.packages('swirl')
library('swirl')
ls()
rm(list=ls())
install_from_swirl("R_Programming")
install_from_swirl("Data_Analysis")
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9, 3.14)
?c
z
c(z,555,z)
z*2+100
sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
shiny::runApp('Dropbox/corplot/shinycorplots-master-b122d52470b8c848139a1ae7e5c932b7f82afff3')
runApp('Dropbox/corplot/shinycorplots-master-b122d52470b8c848139a1ae7e5c932b7f82afff3')
runApp('Dropbox/corplot/shinycorplots-master-b122d52470b8c848139a1ae7e5c932b7f82afff3')
runApp('Dropbox/corplot/shinycorplots-master-b122d52470b8c848139a1ae7e5c932b7f82afff3')
runApp('Dropbox/corplot/shinycorplots-master-b122d52470b8c848139a1ae7e5c932b7f82afff3')
runApp('Dropbox/corplot/shinycorplots-master-b122d52470b8c848139a1ae7e5c932b7f82afff3')
runApp('Dropbox/corplot/shinycorplots-master-b122d52470b8c848139a1ae7e5c932b7f82afff3')
runApp('Dropbox/corplot/shinycorplots-master-b122d52470b8c848139a1ae7e5c932b7f82afff3')
runApp('Dropbox/corplot/shinycorplots-master-b122d52470b8c848139a1ae7e5c932b7f82afff3')
runApp('Dropbox/corplot/shinycorplots-master-b122d52470b8c848139a1ae7e5c932b7f82afff3')
runApp('corplot/shinycorplots-master-b122d52470b8c848139a1ae7e5c932b7f82afff3')
shiny::runApp('LocusExplorer')
runApp('Dropbox/corplot/shinycorplots-master-b122d52470b8c848139a1ae7e5c932b7f82afff3')
install.packages('rsconnect')
install.packages("rsconnect")
library(IRanges)
install.packages("rsconnect")
source("https://bioconductor.org/biocLite.R")
biocLite("IRanges")
library(IRanges)
ir1 <- IRanges(start = c(1,3,5), end = c(3,5,7))
ir1
ir2 <- IRanges(start = c(1,3,5), width = 3)
ir2
all.equal(ir1, ir2)
width(ir2) <- 1
ir2
names(ir1) <- paste("A", 1:3, sep = "")
ir1
names(ir1) <- paste("A", 1:3, sep = "")
ir1
names(ir1)
dim(ir1)
?IRanges
ir3 <- IRanges(start = c(1,3,5), width = 3, names = paste('"A", 1:3, sep =""' ))
ir3
ir3 <- IRanges(start = c(1,3,5), width = 3, names = c(A1,A2,A3))
ir3 <- IRanges(start = c(1,3,5), width = 3, names = c("A1","A2","A3"))
ir3
ir3 <- IRanges(start = c(1,3,5), width = 3, names = (paste('"A", 1:3, sep =""' )))
ir3
browseVignettes("GenomicRanges")
browseVignettes("GenomicRanges")
browseVignettes("IRanges")
shiny::runApp('LocusExplorer')
shiny::runApp('tools/LocusExplorer')
shiny::runApp('LocusExplorer')
runApp('LocusExplorer')
install.packages("LDheatmap")
library("LDheatmap")
library(LDheatmap)
install.packages("snpStats")
source("https://bioconductor.org/biocLite.R")
biocLite("snpStats")
library("LDheatmap")
install.packages("LDheatmap")
library("LDheatmap")
data("CEUData")
data
MyHeatmap <- LDheatmap(CEUSNP, CEUDist, LDmeasure="r", title="Pairwise LD in r^2", add.map=TRUE, SNP.name=c("rs2283092", "rs6979287"), color=grey.colors(20), name="myLDgrob", add.key=TRUE)
MyHeatmap
plot(MyHeatmap)
xy<-data("CEUData")
xy
View("CEUData")
shiny::runApp('LocusExplorer')
library(QCGWAS)
install.packages("QCGWAS")
c
shiny::runApp('LocusExplorer')
runApp('LocusExplorer')
mat = matrix(sample(100, 25), 5)
mat
sample(100,25)
sample(1000,25)
sample(10,25)
sample(10,9)
sample(10,10)
sample(10,11)
mat = matrix(sample(100, 25), 6)
mat = matrix(sample(100, 36), 6)
mat
library(readr)
locus <- read_delim("~/tools/rasp/locus.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(locus)
library(gap)
options(stringsAsFactors=FALSE)
p <- with(locus,data.frame(SNP=NAME,PVAL))
p
hit <- subset(p,PVAL==min(PVAL,na.rm=TRUE))$SNP
hit
install.packages("NCBI2R")
install.packages("~/Downloads/NCBI2R_1.4.7.tar.gz", repos = NULL, type = "source")
library(NCBI2R)
# LD under build 36
pos <- apply(as.data.frame(p$SNP),1,GetSNPPosHapmap)
library(IRanges)
library(gap)
library(NCBI2R)
GetSNPPosHapMap()
GetSNPPosHapMap("rs2074187")
options(stringsAsFactors=FALSE)
p <- with(locus,data.frame(SNP=NAME,PVAL))
p
hit <- subset(p,PVAL==min(PVAL,na.rm=TRUE))$SNP
pos <- apply(as.data.frame(p$SNP),1,GetSNPPosHapmap)
pos <- apply(as.data.frame(p$SNP),1,GetSNPPosHapMap)
hit <- subset(p,PVAL==min(PVAL,na.rm=TRUE))$SNP
hit
p$SNP
pos <- apply(as.data.frame(p$SNP),2,GetSNPPosHapMap)
pos <- apply(as.data.frame(p$SNP),1,GetSNPPosHapMap)
pos <- apply(as.data.frame(p$SNP),1,GetSNPPosHapmap)
library(IRanges)
library(S4Vectors)
library(gap)
library(NCBI2R)
options(stringsAsFactors=FALSE)
p <- with(locus,data.frame(SNP=NAME,PVAL))
hit <- subset(p,PVAL==min(PVAL,na.rm=TRUE))$SNP
pos <- apply(as.data.frame(p$SNP),1,GetSNPPosHapmap)
pos <- apply(as.data.frame(p$SNP),1,GetSNPPosHapMap)
remove.packages("NCBI2R", lib="~/R/x86_64-pc-linux-gnu-library/3.4")
install.packages("~/Downloads/NCBI2R-1.4.6.tar.gz", repos = NULL, type = "source")
library(NCBI2R)
pos <- apply(as.data.frame(p$SNP),1,GetSNPPosHapMap)
library(NCBI2R)
GetSNPPosHapMap("rs2074187")
GetSNPInfo("rs2074187")
library(readr)
snplist <- read_csv("~/Downloads/snplist.csv",
col_names = FALSE)
View(snplist)
GetSNPInfo(snplist)
snp1<-as.data.frame(snplist)
snp1
GetSNPInfo(snp1)
View(locus)
options(stringsAsFactors=FALSE)
p <- with(locus,data.frame(SNP=NAME,PVAL))
p
hit <- subset(p,PVAL==min(PVAL,na.rm=TRUE))$SNP
require(gap.datasets)
install.packages("gap.datasets")
require(gap.datasets)
library(NCBI2R)
chr_pos <- GetSNPInfo(with(p,SNP))[c("chr","chrpos")]
View(chr_pos)
l <- with(chr_pos,min(as.numeric(chrpos),na.rm=TRUE))
u <- with(chr_pos,max(as.numeric(chrpos),na.rm=TRUE))
LD <- with(chr_pos,GetLDInfo(unique(chr),l,u))
l <- with(chr_pos,min(as.numeric(chrpos),na.rm=TRUE))
l
u <- with(chr_pos,max(as.numeric(chrpos),na.rm=TRUE))
u
LD <- with(chr_pos,GetLDInfo(unique(chr),l,u))
pos <- apply(as.data.frame(p$SNP),1,GetSNPPosHapmap)
pos <- apply(as.data.frame(p$SNP),1,GetSNPPosHapMap)
LD <- with(chr_pos,9,l,u))
LD <- with(chr_pos,9,l,u)
LD
LD <- with(chr_pos,9,21890327,22385640)
LD
hit_LD <- subset(LD,SNPA==hit)
hit
hit_LD <- subset(LD,rs10811661)
LD <- with(chr_pos,unique(9),l,u)
LD
hit_LD <- subset(LD,SNPA==hit)
info <- GetSNPInfo(p$SNP)
info
info <- GetSNPInfo(p$SNP)
haldane <- function(x) 0.5*(1-exp(-2*x))
locus <- with(info, data.frame(CHR=chr,POS=chrpos,NAME=marker,
DIST=(chrpos-min(chrpos))/1000000,
THETA=haldane((chrpos-min(chrpos))/100000000)))
locus
locus1 <- with(info, data.frame(CHR=chr,POS=chrpos,NAME=marker,
DIST=(chrpos-min(chrpos))/1000000,
THETA=haldane((chrpos-min(chrpos))/100000000)))
locus1
locus <- with(info, data.frame(CHR=chr,POS=chrpos,NAME=marker,
DIST=(chrpos-min(chrpos))/1000000,
THETA=haldane((chrpos-min(chrpos))/100000000)))
locus <- merge.data.frame(locus,hit_LD,by.x="NAME",by.y="SNPB",all=TRUE)
locus <- merge.data.frame(locus,p,by.x="NAME",by.y="SNP",all=TRUE)
locus
locus <- subset(locus,!is.na(POS))
ann <- AnnotateSNPList(p$SNP)
shiny::runApp('LocusExplorer')
shiny::runApp('Downloads/correlation_plot-v2dev')
